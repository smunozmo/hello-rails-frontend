{"version":3,"sources":["messages.js","configureStore.js","components/Greeting.js","App.js","reportWebVitals.js","index.js"],"names":["GET_MESSAGES_SUCCESS","getMessages","dispatch","type","fetch","then","response","json","getMessagesSuccess","initialState","message","messagesReducer","state","action","body","reducer","combineReducers","store","createStore","applyMiddleware","thunk","Greeting","data","useSelector","useDispatch","useEffect","App","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PACMA,EAAuB,uBAOhBC,EAAc,kBAAM,SAACC,GAEhC,OADAA,EAAS,CAAEC,KATgB,yBAUpBC,MAAM,0DACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUL,EATc,SAACK,GAAD,MAAW,CAC3CJ,KAAMH,EACNO,QAO2BC,CAAmBD,SAGnCE,EAAe,CAAEC,QAAS,IAYxBC,EAVS,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACxD,OAAQA,EAAOV,MACb,KAAKH,EACH,OAAO,2BAAKY,GAAZ,IAAmBF,QAASG,EAAON,KAAK,GAAGO,OAE7C,QACE,OAAOF,ICnBAG,EAAUC,YAAgB,CACrCL,oBAKaM,EAFDC,YAAYH,EAASI,YAAgBC,M,OCWpCC,EAfE,WACf,IAAMC,EAAOC,aAAY,SAACX,GAAD,OAAWA,EAAMD,mBACpCT,EAAWsB,cAMjB,OAJAC,qBAAU,WACRvB,EAASD,OACR,IAGD,8BACGqB,EAAKZ,WCcGgB,EAjBH,kBACV,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,IAAD,CAAUC,GAAG,YAEf,cAAC,IAAD,CAAOD,KAAK,QAAZ,SACE,8BACE,cAAC,EAAD,gBCNGE,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAEnB,IADL4B,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.392f4d72.chunk.js","sourcesContent":["const GET_MESSAGES_REQUEST = 'GET_MESSAGES_REQUEST';\nconst GET_MESSAGES_SUCCESS = 'GET_MESSAGES_SUCCESS';\n\nexport const getMessagesSuccess = (json) => ({\n  type: GET_MESSAGES_SUCCESS,\n  json,\n});\n\nexport const getMessages = () => (dispatch) => {\n  dispatch({ type: GET_MESSAGES_REQUEST });\n  return fetch('https://hello-rails-back-end.herokuapp.com/v1/messages')\n    .then((response) => response.json())\n    .then((json) => dispatch(getMessagesSuccess(json)));\n};\n\nexport const initialState = { message: '' };\n\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MESSAGES_SUCCESS:\n      return { ...state, message: action.json[0].body };\n\n    default:\n      return state;\n  }\n};\n\nexport default messagesReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport messagesReducer from './messages';\n\nexport const reducer = combineReducers({\n  messagesReducer,\n});\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getMessages } from '../messages';\n\nconst Greeting = () => {\n  const data = useSelector((state) => state.messagesReducer);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getMessages());\n  }, []);\n\n  return (\n    <div>\n      {data.message}\n    </div>\n  );\n};\n\nexport default Greeting;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport {\n  HashRouter,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport store from './configureStore';\nimport Greeting from './components/Greeting';\n\nconst App = () => (\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <Redirect to=\"/home\" />\n        </Route>\n        <Route path=\"/home\">\n          <div>\n            <Greeting />\n          </div>\n        </Route>\n      </Switch>\n    </HashRouter>\n  </Provider>\n);\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}